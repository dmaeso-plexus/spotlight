name: Spotlight CI/CD

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: '0.1.0'

jobs:
  # Prepare stage
  prepare-python:
    name: '🐍 Prepare Python'
    if: github.event.pull_request.head.repo.full_name != 'Renumics/spotlight'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: '🐍 Set up Poetry environment'
        id: setup-poetry
        uses: ./.github/actions/setup-poetry
    outputs:
      version: ${{ steps.setup-poetry.outputs.package-version }}
      pip-cache-dir: ${{ steps.setup-poetry.outputs.pip-cache-dir }}

  prepare-node:
    name: '⬢ Prepare Node.js'
    if: github.event.pull_request.head.repo.full_name != 'Renumics/spotlight'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: '⬢ Set up pnpm environment'
        uses: ./.github/actions/setup-pnpm

  # Check stage
  check-pr:
    name: '🔍 Check if pull request'
    if: github.event.pull_request.head.repo.full_name != 'Renumics/spotlight'
    permissions:
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
      - name: '🔍 Check if pull request'
        id: check-pr
        uses: 8BitJonny/gh-get-current-pr@3.0.0
        with:
          filterOutClosed: true
    outputs:
      is-pr: ${{ steps.check-pr.outputs.pr_found }}
      number: ${{ steps.check-pr.outputs.number }}

  # Build stage
  build-test-matrix:
    name: '🧱 Build test matrix'
    needs: [check-pr]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: '🧱 Build test matrix for pull request'
        if: needs.check-pr.outputs.is-pr == 'true'
        uses: druzsan/setup-matrix@v2
        with:
          matrix: |
            os: [ubuntu-latest]
            python-version: [3.8, 3.9, 3.10, 3.11]
      - name: '🧱 Build test matrix for release'
        if: env.MATRIX == '' && startsWith(github.ref, 'refs/tags/v')
        uses: druzsan/setup-matrix@v2
        with:
          matrix: |
            os: [ubuntu-latest, windows-latest, macos-latest]
            python-version: [3.8, 3.9, 3.10, 3.11]
      - name: '🧱 Build test matrix for main branch'
        if: env.MATRIX == '' && github.ref == 'refs/heads/main'
        uses: druzsan/setup-matrix@v2
        with:
          matrix: |
            os: [ubuntu-latest]
            python-version: [3.8, 3.9, 3.10, 3.11]
            include:
              - os: windows-latest
                python-version: 3.8
              - os: macos-latest
                python-version: 3.8
      - name: '🧱 Build test matrix for development branch'
        if: env.MATRIX == ''
        uses: druzsan/setup-matrix@v2
        with:
          matrix: |
            os: [ubuntu-latest]
            python-version: [3.8]
      - name: Print matrix
        run: echo "$MATRIX" | yq -P '{"matrix":.}'
      - name: Set output
        id: set-matrix
        run: echo "matrix=$MATRIX" >> $GITHUB_OUTPUT
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  build-spotlight:
    name: '🧱 Build Spotlight'
    needs: [prepare-python, prepare-node]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: '🐍 Set up Poetry'
        uses: ./.github/actions/setup-poetry
        with:
          install-dependencies: false
      - name: '⬢ Set up pnpm environment'
        uses: ./.github/actions/setup-pnpm
      - name: '🧱 Build frontend'
        run: make build-frontend
      - name: '📥 Store frontend'
        uses: actions/upload-artifact@v4
        with:
          name: frontend-${{ needs.prepare-python.outputs.version }}
          path: build/frontend/
          if-no-files-found: error
      - name: Build Spotlight
        run: make build-wheel
      - name: '📥 Store Spotlight'
        uses: actions/upload-artifact@v4
        with:
          name: renumics-spotlight-${{ needs.prepare-python.outputs.version }}
          path: build/dist/renumics_spotlight*.whl
          if-no-files-found: error

  check-wheel-contents:
    name: '🔍 Check wheel contents'
    needs: [prepare-python, build-spotlight]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: '🐍 Set up Poetry environment'
        uses: ./.github/actions/setup-poetry
      - name: '📤 Restore Spotlight Wheel'
        uses: actions/download-artifact@v4
        with:
          name: renumics-spotlight-${{ needs.prepare-python.outputs.version }}
          path: build/dist
      - name: Check wheel contents
        run: make check-wheel

  release:
    name: '🚀 Release Spotlight'
    runs-on: ubuntu-latest
    needs: [prepare-python, prepare-node, check-pr, build-test-matrix, build-spotlight, check-wheel-contents]
    steps:
      - name: '📤 Download Frontend Artifact'
        uses: actions/download-artifact@v4
        with:
          name: frontend-${{ needs.prepare-python.outputs.version }}
          path: build/frontend
      - name: '📤 Download Wheel Artifact'
        uses: actions/download-artifact@v4
        with:
          name: renumics-spotlight-${{ needs.prepare-python.outputs.version }}
          path: build/dist
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_type == 'tag' && github.ref_name || format('v{0}', github.event.inputs.version) }}
          name: Release ${{ github.ref_type == 'tag' && github.ref_name || github.event.inputs.version }}
          draft: false
          prerelease: false
          files: |
            build/dist/*.whl
            build/frontend/**/*
