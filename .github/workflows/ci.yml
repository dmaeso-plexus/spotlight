name: Spotlight CI/CD

on:
  push:
    branches: [main]
    tags: ['v*']
  pull_request:
    branches: [main]

jobs:
  prepare-python:
    # ... (previous job definitions remain unchanged)

  prepare-node:
    # ... (previous job definitions remain unchanged)

  build-spotlight:
    name: '🧱 Build Spotlight'
    needs:
      - prepare-python
      - prepare-node
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: '🐍 Set up Poetry'
        uses: ./.github/actions/setup-poetry
        with:
          install-dependencies: false
      - name: '⬢ Set up pnpm environment'
        uses: ./.github/actions/setup-pnpm
      - name: '🧱 Build frontend'
        run: make build-frontend
      - name: '📥 Store frontend'
        uses: actions/upload-artifact@v4
        with:
          name: frontend-${{ needs.prepare-python.outputs.version }}
          path: build/frontend/
          if-no-files-found: error
      - name: Build Spotlight
        run: make build-wheel
      - name: '📥 Store Spotlight'
        uses: actions/upload-artifact@v4
        with:
          name: renumics-spotlight-${{ needs.prepare-python.outputs.version }}
          path: build/dist/renumics_spotlight*.whl
          if-no-files-found: error

  check-wheel-contents:
    name: '🔍 Check wheel contents'
    needs:
      - prepare-python
      - build-spotlight
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: '🐍 Set up Poetry environment'
        uses: ./.github/actions/setup-poetry
      - name: '📤 Restore Spotlight Wheel'
        uses: actions/download-artifact@v4
        with:
          name: renumics-spotlight-${{ needs.prepare-python.outputs.version }}
          path: build/dist
      - name: Check wheel contents
        run: make check-wheel

  release:
    name: '🚀 Release Spotlight'
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs:
      - prepare-python
      - prepare-node
      - check-pr
      - build-test-matrix
      - build-spotlight
      - check-wheel-contents
    steps:
      - name: '📤 Download Frontend Artifact'
        uses: actions/download-artifact@v4
        with:
          name: frontend-${{ needs.prepare-python.outputs.version }}
          path: build/frontend
      - name: '📤 Download Wheel Artifact'
        uses: actions/download-artifact@v4
        with:
          name: renumics-spotlight-${{ needs.prepare-python.outputs.version }}
          path: build/dist
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            build/dist/*.whl
            build/frontend/**/*
